
#### erase data menu
8024ef00 # This is where it creates it
###

# Create GObj on erase data
li r3, 6 # GObj Type (6 is meny type?)
li r4, 7 # On-Pause Function (dont run on pause)
li r5, 0x80 # some type of priority
branchl r12, GObj_Create

# Create JObj
mr r0, r3 # Saves returned pointer to GOBJ to r0
load r3, 0x811f9054 # loads some previously saved value from a pointer in r3
mr r29, r0 # Saves pointer again to r29
branchl r12, 0x80370E44
addi	r28, r3, 0 # Stores returned Jobj pointer in r28

# Add Jboj to GObj
addi	r3, r29, 0 # Sets GOBJ as param
lbz	r4, -0x3E57 (r13) # Loads value from memory stack
addi	r5, r28, 0 # Sets JOBJ as param
bl	->0x80390A70 # Add JOBJ to Obj

# Add GXLink
addi r3, r29, 0 # sets r3 to GBOJ
load r4, 0x80391070 # GX Callback func to use
li r5, 6 # Assigns the gx_link index
li r6, 128 # sets the priority
branchl r12, 0x8039069c

# schedules this function
load r3, 0x8137b7a0 # GOBJ
load r4, 0x8024eccc # think func
li r5, 0
branchl r12, 0x8038fd54 # Add To Proc

0x8024eccc # this think function adds the dialog to the animation queue

# Before displaying the dialog and the input is compared to a select
8024f920 # address that calls function(8038fe24) maybe allows input in the dialog and blocks them in the erase menu?
8024f934 # address that add procs to think function(8024f318) to handle input for menu

8137b7a0 #current mem address storing GOBJ of dialog

## After all that the dialog is displayed and the
following function is reading from the memory address that the GObj is stored in:
# 80390db0 exact point where it reads from
# the function starts at 80390cfc and it's called wp_RunObjectFrameFunctions

# This func is the one that initializes the dialog: 0x8024eec4

#### Snpashot menu

# r13 always have this value 804db6a0, looks like it points to somewhere in the memory
# stack for pre-set IDS or something

# Create GObj on snapshot menu
li r3, 6 # GObj Type (6 is meny type?)
li r4, 7 # On-Pause Function (dont run on pause)
li r5, 0x80 # some type of priority
branchl r12, GObj_Create

# Found out this maybe creates a JOBJ?
# Calls same weird function (needs an empty memory addres on r3 to store something?)
# r3 ends up being the same as on the erase data menu: 811f9054
mr r25, r3 # Saves returned pointer to GOBJ to r25
load r3, 0x804a0a78 # loads some previously saved pointer-value from a pointer(sp) in r3
load r3, 0(r3) # and loads the value stored in the above pointer result (looks like a pointer to mem adress again, zeroed out)
stw	r25, 0x0014 (r30) # stores returned pointer to GBOJ in stacked memory
branchl r12, 0x80370E44 # (this func only uses r3)

# I think this is "AddsObject"
# calls next weird function
addi r26, r3, 0 # set to r26 whatever value is in r3 at the moment (new value returned by the above funct)
addi r5, r26, 0 # set r5 returned value from above funct too
addi r3, r25, 0 # set to r3 pointer to GOBj
lbz	r4, -0x3E57 (r13) # grab some previously saved value from a memory addres offset and put it in r4 (r13 points to somewhere kind of with static memory)
branchl r12, 0x80390A70

# Add GXLink
load r4, 0x80253e5c # GX Callback func to use
addi r3, r25, 0 # sets r3 to GBOJ
li r5, 6 # Assigns the gx_link index
li r6, 128 # sets the priority
branchl r12, 0x8039069c


# 0x80253e5c # Pointer to GX_Callback that draws on screen

####### Mine

.set REG_BG_JOBJ, 22
.set REG_BG_GOBJ, 23

# Create GObj on snapshot menu
li r3, 6 # GObj Type (6 is meny type?)
li r4, 7 # On-Pause Function (dont run on pause)
li r5, 0x80 # some type of priority
branchl r12, GObj_Create
mr  REG_BG_GOBJ, r3 # store result

# Create JOBJ
load r3, 0x811f9054
branchl r12, 0x80370E44 # (this func only uses r3)
mr REG_BG_JOBJ, r3 # store result

# Add JOBJ to GObj
mr  r3,REG_BG_GOBJ
lbz	r4, -0x3E57 (r13)
mr  r5,REG_BG_JOBJ
branchl r12, 0x80390A70

# Add GXLink
load r4, 0x80253e5c # GX Callback func to use
addi r3, r25, 0 # sets r3 to GBOJ
li r5, 6 # Assigns the gx_link index
li r6, 128 # sets the priority
branchl r12, 0x8039069c
